(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* no static exports found */
/* all exports used */
/*!******************************************!*\
  !*** ./src/Components/InputComponent.ts ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Input component default implementation\n * @author Islam Attrash\n */\nvar InputComponent = /** @class */ (function () {\n    function InputComponent() {\n    }\n    InputComponent.prototype.render = function () {\n        return \"<input class=\\\"infinite-autocomplete-default-input\\\" type=\\\"text\\\" />\";\n    };\n    return InputComponent;\n}());\nexports.InputComponent = InputComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL0lucHV0Q29tcG9uZW50LnRzPzUxYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUlucHV0Q29tcG9uZW50IH0gZnJvbSBcIi4uL0ludGVyZmFjZXMvSUlucHV0Q29tcG9uZW50XCI7XG5cbi8qKlxuICogSW5wdXQgY29tcG9uZW50IGRlZmF1bHQgaW1wbGVtZW50YXRpb25cbiAqIEBhdXRob3IgSXNsYW0gQXR0cmFzaFxuICovXG5leHBvcnQgY2xhc3MgSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBJSW5wdXRDb21wb25lbnQge1xuICBwdWJsaWMgcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIGA8aW5wdXQgY2xhc3M9XCJpbmZpbml0ZS1hdXRvY29tcGxldGUtZGVmYXVsdC1pbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgLz5gO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQ29tcG9uZW50cy9JbnB1dENvbXBvbmVudC50cyJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7O0FBR0E7QUFDQTtBQUFBO0FBSUE7QUFIQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 1 */
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./src/Components/OptionsComponent.ts ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Options component default implementation\n * @author Islam Attrash\n */\nvar OptionsComponent = /** @class */ (function () {\n    function OptionsComponent() {\n        this.listElementSelector = \"ul\";\n    }\n    OptionsComponent.prototype.render = function () {\n        return \"<\" + this.listElementSelector + \" class=\\\"infinite-autocomplete-default-options\\\"></\" + this.listElementSelector + \">\";\n    };\n    OptionsComponent.prototype.renderOption = function (option) {\n        return \"<li>\\n                \" + option.text + \"\\n            </li>\";\n    };\n    return OptionsComponent;\n}());\nexports.OptionsComponent = OptionsComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL09wdGlvbnNDb21wb25lbnQudHM/NDNjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJT3B0aW9uc0NvbXBvbmVudCB9IGZyb20gXCIuLi9JbnRlcmZhY2VzL0lPcHRpb25zQ29tcG9uZW50XCI7XG5pbXBvcnQgeyBJT3B0aW9uIH0gZnJvbSBcIi4uL0ludGVyZmFjZXMvSU9wdGlvblwiO1xuXG4vKipcbiAqIE9wdGlvbnMgY29tcG9uZW50IGRlZmF1bHQgaW1wbGVtZW50YXRpb25cbiAqIEBhdXRob3IgSXNsYW0gQXR0cmFzaFxuICovXG5leHBvcnQgY2xhc3MgT3B0aW9uc0NvbXBvbmVudCBpbXBsZW1lbnRzIElPcHRpb25zQ29tcG9uZW50IHtcbiAgcHVibGljIGxpc3RFbGVtZW50U2VsZWN0b3I6IHN0cmluZyA9IGB1bGA7XG5cbiAgcHVibGljIHJlbmRlcigpIHtcbiAgICByZXR1cm4gYDwke3RoaXMubGlzdEVsZW1lbnRTZWxlY3Rvcn0gY2xhc3M9XCJpbmZpbml0ZS1hdXRvY29tcGxldGUtZGVmYXVsdC1vcHRpb25zXCI+PC8ke3RoaXMubGlzdEVsZW1lbnRTZWxlY3Rvcn0+YDtcbiAgfVxuXG4gIHB1YmxpYyByZW5kZXJPcHRpb24ob3B0aW9uOiBJT3B0aW9uKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYDxsaT5cbiAgICAgICAgICAgICAgICAke29wdGlvbi50ZXh0fVxuICAgICAgICAgICAgPC9saT5gO1xuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9Db21wb25lbnRzL09wdGlvbnNDb21wb25lbnQudHMiXSwibWFwcGluZ3MiOiI7O0FBR0E7OztBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBWUE7QUFWQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFFQTtBQUFBO0FBYkE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 2 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./src/Constants/index.ts ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Hovered state when navigation through upArrow/downArrow while options is open */\nexports.HOVERED = \"hovered\";\n/**\n * Key down states (keyCodes)\n */\nexports.KEY_PRESS_STATES = {\n    UP: 38,\n    DOWN: 40,\n    ENTER: 13,\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db25zdGFudHMvaW5kZXgudHM/NGQ1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKiBIb3ZlcmVkIHN0YXRlIHdoZW4gbmF2aWdhdGlvbiB0aHJvdWdoIHVwQXJyb3cvZG93bkFycm93IHdoaWxlIG9wdGlvbnMgaXMgb3BlbiAqL1xuZXhwb3J0IGNvbnN0IEhPVkVSRUQgPSBcImhvdmVyZWRcIjtcblxuLyoqXG4gKiBLZXkgZG93biBzdGF0ZXMgKGtleUNvZGVzKVxuICovXG5leHBvcnQgY29uc3QgS0VZX1BSRVNTX1NUQVRFUyA9IHtcbiAgICBVUDogMzgsXG4gICAgRE9XTjogNDAsXG4gICAgRU5URVI6IDEzLFxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9Db25zdGFudHMvaW5kZXgudHMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 3 */
/* no static exports found */
/* all exports used */
/*!****************************!*\
  !*** ./src/Utils/index.ts ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Utils Class\n * @author Islam Attrash\n */\nvar Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    /**\n     * Throw error message\n     * @param error - Error message\n     */\n    Utils.throwErrorInConsole = function (error) {\n        console.error(error);\n    };\n    return Utils;\n}());\nexports.Utils = Utils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9VdGlscy9pbmRleC50cz8yZGJjIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBVdGlscyBDbGFzc1xuICogQGF1dGhvciBJc2xhbSBBdHRyYXNoXG4gKi9cbmV4cG9ydCBjbGFzcyBVdGlscyB7XG4gIC8qKlxuICAgKiBUaHJvdyBlcnJvciBtZXNzYWdlXG4gICAqIEBwYXJhbSBlcnJvciAtIEVycm9yIG1lc3NhZ2VcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgdGhyb3dFcnJvckluQ29uc29sZShlcnJvcjogRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvVXRpbHMvaW5kZXgudHMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7OztBQUdBO0FBQ0E7QUFBQTtBQVFBO0FBUEE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVJBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 4 */
/* no static exports found */
/* all exports used */
/*!************************************************!*\
  !*** ./src/Components/InfiniteAutocomplete.ts ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar InputComponent_1 = __webpack_require__(/*! ./InputComponent */ 0);\nvar OptionsComponent_1 = __webpack_require__(/*! ./OptionsComponent */ 1);\nvar index_1 = __webpack_require__(/*! ../Constants/index */ 2);\nvar index_2 = __webpack_require__(/*! ../Utils/index */ 3);\n/**\n * Default Input in infinite-autocomplete component\n */\nexports.InputComponent = InputComponent_1.InputComponent;\n/**\n * Default Input in infinite-autocomplete component\n */\nexports.OptionsComponent = OptionsComponent_1.OptionsComponent;\n/**\n * infinite-autocomplete component implementation\n * @author Islam Attrash\n */\nvar InfiniteAutocomplete = /** @class */ (function () {\n    /**\n     * constructor for InfiniteAutocomplete class\n     * Enabling pluggable system linked with Interfaces only\n     * @param element - HTMLElement to append the infinite-autocomplete in it\n     * @param config - InfiniteAutocomplete config options\n     * @param optionComponent - Option component implementation to be injected (or default)\n     * @param inputComponent - Input component implementation to be injected (or default)\n     * @param optionsComponent - Options component implementation to be injected (or default)\n     */\n    function InfiniteAutocomplete(element, config) {\n        var _this = this;\n        this.page = 1;\n        this.searchedText = \"\";\n        this.isDestroyed = false;\n        this.preventMoreRequests = false;\n        this.fetchingData = false;\n        /**\n         * Default configuration object\n         */\n        this.defaultConfig = {\n            fetchSize: 10,\n            maxHeight: \"160px\",\n            customizedInput: InputComponent_1.InputComponent,\n            customizedOptions: OptionsComponent_1.OptionsComponent,\n        };\n        /**\n         * Set the config object with extending\n         * @param config - infinite-autocomplete configuration object\n         */\n        this.setConfig = function (config) {\n            _this.destroy();\n            _this.config = __assign({}, _this.config, config);\n            _this.inputComponent = new _this.config.customizedInput();\n            _this.optionsComponent = new _this.config.customizedOptions();\n            _this.init();\n        };\n        /**\n         * Destroy the infinite-autocomplete and unbind all events\n         */\n        this.destroy = function () {\n            if (_this.isDestroyed) {\n                return;\n            }\n            if (!_this.isOptionsHidden()) {\n                _this.clearOptions();\n            }\n            var optionsList = _this.getOptionsBaseElement();\n            optionsList.removeEventListener(\"scroll\", _this.scrollReachedBottomHandler);\n            var inputEle = _this.getInputElement();\n            inputEle.removeEventListener(\"input\", _this.onInputChange);\n            inputEle.removeEventListener(\"click\", _this.onInputChange);\n            inputEle.removeEventListener(\"keydown\", _this.onKeyPressed);\n            document.removeEventListener(\"click\", _this.onDocumentClickHandler);\n            document.removeEventListener(\"keydown\", _this.onEscapeEventHandler);\n            _this.element.innerHTML = \"\";\n            _this.isDestroyed = true;\n        };\n        /**\n         * Initialize hook that get executed immediatly after using the infinite-autocomplete component\n         */\n        this.init = function () {\n            _this.applyStylesRules();\n            _this.appendInfiniteAutocompleteWrapperClass();\n            _this.linkInputComponent();\n            _this.linkOptionsComponent();\n            _this.bindScrollReachBottomEvent();\n            _this.bindEscapeEvent();\n            _this.bindOutSideClickEvent();\n            _this.isDestroyed = false;\n        };\n        /**\n         * (#1) Binds a click handler to detect where the user clicked\n         * If click is out side the main wrapper area then close options\n         */\n        this.bindOutSideClickEvent = function () {\n            document.addEventListener(\"click\", _this.onDocumentClickHandler);\n        };\n        /**\n         * on document click handler\n         * @param event - Event\n         */\n        this.onDocumentClickHandler = function (event) {\n            if (!_this.isOptionsHidden()) {\n                var clickedOutSide = _this.checkIfClickedOutSideTheAutocompleteComponents(event.target);\n                if (clickedOutSide) {\n                    _this.clearOptions();\n                }\n            }\n        };\n        /**\n         * Check if click is outside the plugin\n         * @param element - HTMLElement\n         */\n        this.checkIfClickedOutSideTheAutocompleteComponents = function (element) {\n            if (element === null) {\n                return true;\n            }\n            else if (element === _this.element) {\n                return false;\n            }\n            else {\n                return _this.checkIfClickedOutSideTheAutocompleteComponents(element.parentElement);\n            }\n        };\n        /**\n         * (#11) Binds escape event handler to clear the options when clicking Esc\n         */\n        this.bindEscapeEvent = function () {\n            document.addEventListener(\"keydown\", _this.onEscapeEventHandler);\n        };\n        /**\n         * Escape event handler\n         * @param e - KeyboardEvent\n         */\n        this.onEscapeEventHandler = function (e) {\n            if (e.keyCode === 27 && !_this.isOptionsHidden()) {\n                _this.clearOptions();\n            }\n        };\n        /**\n         * Append infinite autocomplete main wrapper className\n         */\n        this.appendInfiniteAutocompleteWrapperClass = function () {\n            if (!_this.element.className || _this.element.className.indexOf(\"infinite-autocomplete-wrapper\") === -1) {\n                _this.element.className = _this.element\n                    .className\n                    .split(\" \")\n                    .concat([\"infinite-autocomplete-wrapper\"])\n                    .filter(function (c) { return c; })\n                    .join(\" \");\n            }\n        };\n        /**\n         * Reset current page\n         */\n        this.resetCurrentPage = function () {\n            _this.page = 1;\n        };\n        /**\n         * Link input component into the input wrapper\n         */\n        this.linkInputComponent = function () {\n            var MissingInputElementInInputComponentExceptionMsg = new Error(\"Customized input should contain input element <input />\");\n            var inputWrapperEle = document.createElement(\"div\");\n            inputWrapperEle.className = \"infinite-autocomplete-input-wrapper\";\n            inputWrapperEle.innerHTML = _this.inputComponent.render();\n            var inputEle = inputWrapperEle.querySelector(\"input\");\n            if (!inputEle) {\n                index_2.Utils.throwErrorInConsole(MissingInputElementInInputComponentExceptionMsg);\n                throw MissingInputElementInInputComponentExceptionMsg;\n            }\n            inputEle\n                .addEventListener(\"input\", _this.onInputChange);\n            // (#2) Start to show options when focus on the input\n            inputEle\n                .addEventListener(\"click\", _this.onInputChange);\n            inputEle\n                .addEventListener(\"keydown\", _this.onKeyPressed);\n            _this.element.appendChild(inputWrapperEle);\n        };\n        /**\n         * On keydown pressing in input element\n         * @param keydownEvent - pressing key event\n         */\n        this.onKeyPressed = function (keydownEvent) {\n            if (!_this.isOptionsHidden()) {\n                var currentHovered = _this.getNavigationIndex();\n                if (currentHovered === -1) {\n                    if (keydownEvent.keyCode === index_1.KEY_PRESS_STATES.DOWN) {\n                        _this.toggleHoveredState(0, keydownEvent);\n                    }\n                }\n                else {\n                    switch (keydownEvent.keyCode) {\n                        case index_1.KEY_PRESS_STATES.DOWN:\n                            _this.toggleHoveredState(currentHovered + 1, keydownEvent);\n                            break;\n                        case index_1.KEY_PRESS_STATES.UP:\n                            _this.toggleHoveredState(currentHovered - 1, keydownEvent);\n                            break;\n                        case index_1.KEY_PRESS_STATES.ENTER:\n                            _this.clickOnHovered();\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        };\n        /**\n         * Click on hovered element\n         */\n        this.clickOnHovered = function () {\n            var optionsList = _this.getOptionsBaseElement();\n            var hoveredElement = optionsList.querySelector(\".\" + index_1.HOVERED);\n            if (hoveredElement) {\n                hoveredElement.click();\n            }\n        };\n        /**\n         * Simulate Scrolled to bottom\n         */\n        this.simulateScrollToBottom = function () {\n            var optionsList = _this.getOptionsBaseElement();\n            var scrollEvent = new Event(\"scroll\", { bubbles: true });\n            optionsList.scrollTop = 10000; // Simulate reached bottom\n            optionsList.dispatchEvent(scrollEvent);\n        };\n        /**\n         * Toggle hovered state on specific index in options list\n         * @param index - The index to be applied as hovered\n         */\n        this.toggleHoveredState = function (index, keydownEvent) {\n            var optionsList = _this.getOptionsBaseElement();\n            if (index === optionsList.children.length) {\n                _this.simulateScrollToBottom();\n            }\n            if (index >= 0 && index < optionsList.children.length) {\n                var hoveredElement = optionsList.querySelector(\".\" + index_1.HOVERED);\n                if (hoveredElement) {\n                    hoveredElement.className = hoveredElement\n                        .className\n                        .split(\" \")\n                        .filter(function (e) { return e !== index_1.HOVERED; })\n                        .join(\" \")\n                        .trim();\n                }\n                var targetElement = optionsList.children[index];\n                targetElement.className += \" \" + index_1.HOVERED;\n                // If hovered is not in the scrollable view\n                if (targetElement.offsetTop < optionsList.scrollTop || (targetElement.offsetTop - optionsList.scrollTop > optionsList.clientHeight)) {\n                    switch (keydownEvent.keyCode) {\n                        case index_1.KEY_PRESS_STATES.UP:\n                            targetElement.scrollIntoView(true);\n                            break;\n                        case index_1.KEY_PRESS_STATES.DOWN:\n                            targetElement.scrollIntoView(false);\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        };\n        /**\n         * Get navigation index if options is open\n         * @returns Options current index\n         */\n        this.getNavigationIndex = function () {\n            var optionsList = _this.getOptionsBaseElement();\n            for (var i = 0; i < optionsList.children.length; i++) {\n                var option = optionsList.children[i];\n                if (option.className.indexOf(index_1.HOVERED) !== -1) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        /**\n         * Input component `change` event handler\n         * @param inputChangeEvent - Input change event handler\n         */\n        this.onInputChange = function (inputChangeEvent) {\n            var target = inputChangeEvent.currentTarget;\n            // If user pass special behavior for typing via configuration\n            if (_this.inputComponent.onInputChange) {\n                _this.inputComponent.onInputChange(target, target.value);\n            }\n            // If we type always fetch data and build options\n            // If we click on input and the options is hidden build the options\n            // If we click on input and the options is already opened don't do anything\n            if (inputChangeEvent.type === \"input\" ||\n                (inputChangeEvent.type === \"click\" && _this.isOptionsHidden())) {\n                _this.buildOptions(target.value, true);\n            }\n        };\n        /**\n         * Link options component into the infinite autocomplete component\n         */\n        this.linkOptionsComponent = function () {\n            var optionsWrapperEle = document.createElement(\"div\");\n            optionsWrapperEle.className = \"infinite-autocomplete-options-wrapper\";\n            optionsWrapperEle.innerHTML = _this.optionsComponent.render();\n            var optionsEle = optionsWrapperEle.querySelector(_this.optionsComponent.listElementSelector);\n            _this.setElementVisiblity(optionsWrapperEle, false);\n            optionsEle.style.overflow = \"scroll\";\n            optionsEle.style.overflowX = \"hidden\";\n            optionsEle.style.border = \"1px solid #bcbcbc\";\n            optionsEle.style.paddingBottom = \"5px\";\n            optionsEle.style.maxHeight = _this.config.maxHeight || null;\n            _this.element.appendChild(optionsWrapperEle);\n        };\n        /**\n         * Check if options wrapper hidden or not\n         * @returns true if hidden, or else false\n         */\n        this.isOptionsHidden = function () {\n            var optionsWrapper = _this.element.querySelector(\".infinite-autocomplete-options-wrapper\");\n            return optionsWrapper.className\n                .indexOf(\"infinite-autocomplete-hidden-element\") > -1;\n        };\n        /**\n         * Apply the style rules for the infinite autocomplete plugin and it's components\n         */\n        this.applyStylesRules = function () {\n            // Main wrapper style rules\n            var isMainWrapperStyleApplied = document.head.querySelector(\"#infinite-autocomplete-wrapper-style\");\n            if (!isMainWrapperStyleApplied) {\n                var mainWrapperStyle = document.createElement(\"style\");\n                mainWrapperStyle.id = \"infinite-autocomplete-wrapper-style\";\n                mainWrapperStyle.innerHTML = \"\\n          .infinite-autocomplete-wrapper {\\n              position: relative;\\n          }\\n      \";\n                document.head.appendChild(mainWrapperStyle);\n            }\n            // Hidden element style rules\n            var isHiddenStyleApplied = document.head.querySelector(\"#infinite-autocomplete-hidden-style\");\n            if (!isHiddenStyleApplied) {\n                var hiddenStyle = document.createElement(\"style\");\n                hiddenStyle.id = \"infinite-autocomplete-hidden-style\";\n                hiddenStyle.innerHTML = \"\\n          .infinite-autocomplete-hidden-element {\\n              visibility: hidden;\\n              z-index: -1;\\n          }\\n      \";\n                document.head.appendChild(hiddenStyle);\n            }\n            // Defaults style rules\n            var isDefaultsStyleApplied = document.head.querySelector(\"#infinite-autocomplete-defaults-style\");\n            if (!isDefaultsStyleApplied) {\n                var defaultsStyle = document.createElement(\"style\");\n                defaultsStyle.id = \"infinite-autocomplete-defaults-style\";\n                defaultsStyle.innerHTML = \"\\n          .infinite-autocomplete-input-wrapper .infinite-autocomplete-default-input {\\n              height: 28px;\\n              border-radius: 8px;\\n              box-shadow: inset 0px 0px 15px -4px transparent;\\n          }\\n          .infinite-autocomplete-options-wrapper .infinite-autocomplete-default-options {\\n              list-style-type: none;\\n              margin-top: 0;\\n              padding-left: 0;\\n              margin-bottom: 0;\\n          }\\n          .infinite-autocomplete-options-wrapper .infinite-autocomplete-default-options li {\\n              padding: 5px 10px 10px 10px;\\n          }\\n          .infinite-autocomplete-options-wrapper .infinite-autocomplete-default-options li.hovered {\\n              background: #d5ebff;\\n              color: black;\\n              cursor: pointer;\\n          }\\n      \";\n                document.head.appendChild(defaultsStyle);\n            }\n            // Input style rules\n            var isInputStyleApplied = document.head.querySelector(\"#infinite-autocomplete-input-style\");\n            if (!isInputStyleApplied) {\n                var inputStyle = document.createElement(\"style\");\n                inputStyle.id = \"infinite-autocomplete-input-style\";\n                inputStyle.innerHTML = \"\\n          .infinite-autocomplete-input-wrapper input {\\n              width: 100%;\\n          }\\n      \";\n                document.head.appendChild(inputStyle);\n            }\n            // Options style rules\n            var isOptionsStyleApplied = document.head.querySelector(\"#infinite-autocomplete-options-style\");\n            if (!isOptionsStyleApplied) {\n                var optionsStyle = document.createElement(\"style\");\n                optionsStyle.id = \"infinite-autocomplete-options-style\";\n                optionsStyle.innerHTML = \"\\n          .infinite-autocomplete-options-wrapper {\\n              position: absolute;\\n              z-index: 10;\\n              background: white;\\n          }\\n      \";\n                document.head.appendChild(optionsStyle);\n            }\n            // Scrollbar style rules\n            var isScrollbarStyleApplied = document.head.querySelector(\"#infinite-autocomplete-scrollbar-style\");\n            if (!isScrollbarStyleApplied) {\n                var specialScroll = document.createElement(\"style\");\n                specialScroll.id = \"infinite-autocomplete-scrollbar-style\";\n                specialScroll.innerHTML = \"\\n          .infinite-autocomplete-wrapper ::-webkit-scrollbar {\\n                  width: 4px;\\n              }\\n\\n              .infinite-autocomplete-wrapper ::-webkit-scrollbar-track {\\n                  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\n                  -webkit-border-radius: 10px;\\n                  border-radius: 10px;\\n              }\\n\\n              .infinite-autocomplete-wrapper ::-webkit-scrollbar-thumb {\\n                  -webkit-border-radius: 10px;\\n                  border-radius: 10px;\\n                  background: rgba(128, 128, 128, 0.8);\\n                  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);\\n              }\\n              .infinite-autocomplete-wrapper ::-webkit-scrollbar-thumb:window-inactive {\\n                  background: rgba(255,0,0,0.4);\\n              }\\n      \";\n                document.head.appendChild(specialScroll);\n            }\n        };\n        /**\n         * Binds a scroll event handler on the options\n         */\n        this.bindScrollReachBottomEvent = function () {\n            var optionsEle = _this.getOptionsBaseElement();\n            optionsEle.addEventListener(\"scroll\", _this.scrollReachedBottomHandler);\n        };\n        /**\n         * Scroll reached bottom handler\n         * @param e - Scroll event object\n         */\n        this.scrollReachedBottomHandler = function (e) {\n            var optionsEle = e.currentTarget;\n            if (!_this.fetchingData && !_this.preventMoreRequests && !_this.isOptionsHidden()) {\n                if (optionsEle.scrollTop + optionsEle.clientHeight >= optionsEle.scrollHeight) {\n                    _this.page++;\n                    _this.buildOptions(_this.getInputElement().value, false);\n                }\n            }\n        };\n        /**\n         * Clears the options list tag with removing the click event handlers\n         * unbind the `scroll` event from the options\n         * (Garbage collecting)\n         */\n        this.clearOptions = function () {\n            _this.detachOptionEventHandlers(_this.getOptionsBaseElement()\n                .querySelectorAll(\"[infinite-clickable]\"));\n            _this.resetCurrentPage();\n            _this.preventMoreRequests = false;\n            var optionListElement = _this.getOptionsBaseElement();\n            _this.setElementVisiblity(_this.element.querySelector(\".infinite-autocomplete-options-wrapper\"), false);\n            optionListElement.innerHTML = \"\";\n        };\n        /**\n         * Option click event handler\n         * @param clickEvent\n         */\n        this.onOptionClickEvent = function (clickEvent) {\n            if (_this.config.onSelect) {\n                _this.config.onSelect(clickEvent.currentTarget, clickEvent.currentTarget.data);\n            }\n            _this.clearOptions();\n            _this.setInput(clickEvent.currentTarget.data.text);\n        };\n        /**\n         * On hovering on option row\n         * @param event - Hover Mouse Event\n         */\n        this.onOptionHoverEvent = function (event) {\n            var optionsList = _this.getOptionsBaseElement();\n            var hoveredElement = optionsList.querySelector(\".\" + index_1.HOVERED);\n            if (hoveredElement) {\n                hoveredElement.className = hoveredElement\n                    .className\n                    .split(\" \")\n                    .filter(function (e) { return e !== index_1.HOVERED; })\n                    .join(\" \")\n                    .trim();\n            }\n            var target = event.currentTarget;\n            target.className += \" \" + index_1.HOVERED;\n        };\n        this.element = element;\n        this.config = __assign({}, this.defaultConfig, config);\n        this.inputComponent = new this.config.customizedInput();\n        this.optionsComponent = new this.config.customizedOptions();\n        this.init();\n    }\n    /**\n     * Sets the element visiblity\n     * @param element - HTMLElement\n     * @param visible - visibility status\n     */\n    InfiniteAutocomplete.prototype.setElementVisiblity = function (element, visible) {\n        if (visible) {\n            element.className = element.className\n                .split(\" \")\n                .filter(function (e) { return e !== \"infinite-autocomplete-hidden-element\"; })\n                .join(\" \");\n        }\n        else {\n            if (element.className.indexOf(\"infinite-autocomplete-hidden-element\") === -1) {\n                element.className += \" infinite-autocomplete-hidden-element\";\n            }\n        }\n    };\n    /**\n     * Get options base HTMLElement\n     * @returns HTMLElement\n     */\n    InfiniteAutocomplete.prototype.getOptionsBaseElement = function () {\n        var optionsWrapperExceptionMsg = new Error(\"Couldn't get the options base element.\");\n        if (this.element) {\n            var optionsWrapper = this.element\n                .querySelector(\".infinite-autocomplete-options-wrapper\");\n            if (optionsWrapper) {\n                return optionsWrapper\n                    .querySelector(this.optionsComponent.listElementSelector);\n            }\n            else {\n                index_2.Utils.throwErrorInConsole(optionsWrapperExceptionMsg);\n                throw optionsWrapperExceptionMsg;\n            }\n        }\n        else {\n            index_2.Utils.throwErrorInConsole(optionsWrapperExceptionMsg);\n            throw optionsWrapperExceptionMsg;\n        }\n    };\n    /**\n     * Detaching the event handlers over the option elements\n     */\n    InfiniteAutocomplete.prototype.detachOptionEventHandlers = function (elements) {\n        for (var i = 0; i < elements.length; i++) {\n            elements[i].removeEventListener(\"click\", this.onOptionClickEvent);\n            elements[i].removeEventListener(\"mouseover\", this.onOptionHoverEvent);\n        }\n    };\n    /**\n     * Get input HTML element below infinite-autocomplete-input-wrapper\n     * @returns HTMLInputElement\n     */\n    InfiniteAutocomplete.prototype.getInputElement = function () {\n        var inputElementExceptionMsg = new Error(\"Couldn't get the input element.\");\n        if (this.element) {\n            var inputWrapper = this.element\n                .querySelector(\".infinite-autocomplete-input-wrapper\");\n            if (inputWrapper) {\n                return inputWrapper\n                    .querySelector(\"input\");\n            }\n            else {\n                index_2.Utils.throwErrorInConsole(inputElementExceptionMsg);\n                throw inputElementExceptionMsg;\n            }\n        }\n        else {\n            index_2.Utils.throwErrorInConsole(inputElementExceptionMsg);\n            throw inputElementExceptionMsg;\n        }\n    };\n    /**\n     * Set input shown text\n     * @param text\n     */\n    InfiniteAutocomplete.prototype.setInput = function (text) {\n        this.getInputElement()\n            .value = text;\n    };\n    /**\n     * Get data based on text, page and fetchSize\n     * @param text\n     * @param page\n     * @param fetchSize\n     */\n    InfiniteAutocomplete.prototype.getData = function (text, page, fetchSize) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataSourceMissingExceptionMsg, from, to, staticData, apiData;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.searchedText = text;\n                        dataSourceMissingExceptionMsg = new Error(\"You must pass data or getDataFromApi function via config\");\n                        if (!this.config.data) return [3 /*break*/, 1];\n                        this.fetchingData = true;\n                        from = (page - 1) * fetchSize;\n                        to = (fetchSize * (page - 1)) + fetchSize;\n                        staticData = this.config.data\n                            .filter(function (option) { return option.text.toLowerCase().indexOf(text.toLowerCase()) !== -1; })\n                            .slice(from, to);\n                        this.fetchingData = false;\n                        return [2 /*return*/, staticData];\n                    case 1:\n                        if (!this.config.getDataFromApi) return [3 /*break*/, 3];\n                        this.fetchingData = true;\n                        return [4 /*yield*/, this.config.getDataFromApi(text, page, fetchSize)];\n                    case 2:\n                        apiData = _a.sent();\n                        this.fetchingData = false;\n                        if (this.searchedText === text &&\n                            this.page === page &&\n                            this.config.fetchSize === fetchSize) {\n                            return [2 /*return*/, apiData];\n                        }\n                        else {\n                            return [2 /*return*/, null];\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        index_2.Utils.throwErrorInConsole(dataSourceMissingExceptionMsg);\n                        throw dataSourceMissingExceptionMsg;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Build the options inner tags in options list tag based on the text passed and the data in config\n     * @param text - Text to search on in the autocomplete\n     * @param clearPreviousData - Flag to clear previous options and override with the new one\n     */\n    InfiniteAutocomplete.prototype.buildOptions = function (text, clearPreviousData) {\n        if (clearPreviousData === void 0) { clearPreviousData = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var fetchSizeExceptionMsg, optionListElement, filteredOptions, chunkClientHeight, maxHeightNumber, optionsWrapperEle, optionsEle;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fetchSizeExceptionMsg = new Error(\"fetchSize must be overriden with correct numeric value\");\n                        optionListElement = this.getOptionsBaseElement();\n                        if (clearPreviousData) {\n                            this.clearOptions();\n                        }\n                        if (!this.config.fetchSize) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getData(text, this.page, this.config.fetchSize)];\n                    case 1:\n                        filteredOptions = _a.sent();\n                        if (filteredOptions !== null) {\n                            if (filteredOptions.length < this.config.fetchSize) {\n                                // Stop fetching more chunks whenever you get less than the chunk fetch size\n                                this.preventMoreRequests = true;\n                            }\n                            filteredOptions\n                                .forEach(function (option) {\n                                var optionElementTemplate = _this.optionsComponent.renderOption(option);\n                                var tempElement = document.createElement(\"div\");\n                                tempElement.innerHTML = optionElementTemplate;\n                                var optionElement = tempElement.childNodes[0];\n                                optionElement.data = { text: option.text, value: option.value };\n                                optionElement.setAttribute(\"infinite-clickable\", \"\");\n                                optionElement.addEventListener(\"click\", _this.onOptionClickEvent);\n                                optionElement.addEventListener(\"mouseover\", _this.onOptionHoverEvent);\n                                optionListElement.appendChild(optionElement);\n                            });\n                            if (filteredOptions.length > 0) {\n                                chunkClientHeight = optionListElement.children[0].clientHeight;\n                                // Check if maxHeight is fits the chunk size list\n                                if (this.config.maxHeight) {\n                                    maxHeightNumber = parseInt(this.config.maxHeight, 10);\n                                    if (maxHeightNumber >= chunkClientHeight * this.config.fetchSize) {\n                                        this.config.maxHeight = (chunkClientHeight * this.config.fetchSize - 5) + \"px\";\n                                        optionsWrapperEle = this.element.querySelector(\".infinite-autocomplete-options-wrapper\");\n                                        optionsEle = optionsWrapperEle.querySelector(this.optionsComponent.listElementSelector);\n                                        optionsEle.style.maxHeight = this.config.maxHeight;\n                                    }\n                                }\n                            }\n                        }\n                        if (optionListElement.innerHTML !== \"\") {\n                            this.setElementVisiblity(this.element.querySelector(\".infinite-autocomplete-options-wrapper\"), true);\n                        }\n                        else {\n                            this.setElementVisiblity(this.element.querySelector(\".infinite-autocomplete-options-wrapper\"), false);\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        index_2.Utils.throwErrorInConsole(fetchSizeExceptionMsg);\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return InfiniteAutocomplete;\n}());\nexports.InfiniteAutocomplete = InfiniteAutocomplete;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);
});